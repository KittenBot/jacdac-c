{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "additionalProperties": false,
    "definitions": {
        "ButtonConfig": {
            "additionalProperties": false,
            "properties": {
                "activeHigh": {
                    "description": "Button is normally active-low and pulled high.\nThis makes it active-high and pulled low.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "pin": {
                    "type": "integer"
                },
                "pinBacklight": {
                    "description": "This pin is set high when the button is pressed.",
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "button"
                    ],
                    "type": "string"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "pin",
                "service"
            ],
            "type": "object"
        },
        "HexInt": {
            "type": [
                "string",
                "integer"
            ]
        },
        "LedChannel": {
            "additionalProperties": false,
            "properties": {
                "mult": {
                    "description": "Multiplier to compensate for different LED strengths.",
                    "maximum": 255,
                    "minimum": 0,
                    "type": "integer"
                },
                "pin": {
                    "type": "integer"
                }
            },
            "required": [
                "pin"
            ],
            "type": "object"
        },
        "LedConfig": {
            "additionalProperties": false,
            "properties": {
                "activeHigh": {
                    "description": "Applies to all LED channels/pins.",
                    "type": "boolean"
                },
                "isMono": {
                    "description": "Defaults to `true` if `pin` is set and `type` is 0.\nOtherwise `false`.",
                    "type": "boolean"
                },
                "pin": {
                    "description": "If a single mono LED.",
                    "type": "integer"
                },
                "rgb": {
                    "description": "RGB LED driven by PWM.",
                    "items": {
                        "$ref": "#/definitions/LedChannel"
                    },
                    "maxItems": 3,
                    "minItems": 3,
                    "type": "array"
                },
                "type": {
                    "default": 0,
                    "description": "0 - use `pin` or `rgb` as regular pins\n1 - use `pin` as WS2812B (supported only on some boards)\nOther options (in range 100+) are also possible on some boards.",
                    "type": "integer"
                }
            },
            "type": "object"
        },
        "LightLevelConfig": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "offset": {
                    "default": 1024,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "pin": {
                    "description": "Pin to analog read.",
                    "type": "integer"
                },
                "pinHigh": {
                    "description": "Pin to pull high before analog read and release afterwards.",
                    "type": "integer"
                },
                "pinLow": {
                    "description": "Pin to pull low before analog read and release afterwards.",
                    "type": "integer"
                },
                "samplingDelay": {
                    "default": 0,
                    "description": "How many milliseconds to wait after setting `pinLow`/`pinHigh` before sampling.",
                    "type": "integer"
                },
                "samplingItv": {
                    "default": 9,
                    "description": "Interval in milliseconds between samplings of the sensor.",
                    "type": "integer"
                },
                "scale": {
                    "default": 0,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "analog:lightLevel"
                    ],
                    "type": "string"
                },
                "streamingItv": {
                    "default": 100,
                    "description": "Default interval in milliseconds between streaming samples.",
                    "type": "integer"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "pin",
                "service"
            ],
            "type": "object"
        },
        "PotentiometerConfig": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "offset": {
                    "default": 1024,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "pin": {
                    "description": "Pin to analog read.",
                    "type": "integer"
                },
                "pinHigh": {
                    "description": "Pin to pull high before analog read and release afterwards.",
                    "type": "integer"
                },
                "pinLow": {
                    "description": "Pin to pull low before analog read and release afterwards.",
                    "type": "integer"
                },
                "samplingDelay": {
                    "default": 0,
                    "description": "How many milliseconds to wait after setting `pinLow`/`pinHigh` before sampling.",
                    "type": "integer"
                },
                "samplingItv": {
                    "default": 9,
                    "description": "Interval in milliseconds between samplings of the sensor.",
                    "type": "integer"
                },
                "scale": {
                    "default": 0,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "analog:potentiometer"
                    ],
                    "type": "string"
                },
                "streamingItv": {
                    "default": 100,
                    "description": "Default interval in milliseconds between streaming samples.",
                    "type": "integer"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "pin",
                "service"
            ],
            "type": "object"
        },
        "PowerConfig": {
            "additionalProperties": false,
            "properties": {
                "faultIgnoreMs": {
                    "default": 16,
                    "description": "How long (in milliseconds) to ignore the `pinFault` after enabling.",
                    "type": "integer"
                },
                "mode": {
                    "description": "Operation mode of pinEn\n0 - `pinEn` is active high\n1 - `pinEn` is active low\n2 - transistor-on-EN setup, where flt and en are connected at limiter\n3 - EN should be pulsed at 50Hz (10ms on, 10ms off) to enable the limiter",
                    "type": "integer"
                },
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "pinEn": {
                    "type": "integer"
                },
                "pinFault": {
                    "description": "Always active low.",
                    "type": "integer"
                },
                "pinLedPulse": {
                    "description": "Additional power LED to pulse.",
                    "type": "integer"
                },
                "pinPulse": {
                    "description": "Active-low pin for pulsing battery banks.",
                    "type": "integer"
                },
                "pinUsbDetect": {
                    "description": "Pin that is high when we are connected to USB or similar power source.",
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "power"
                    ],
                    "type": "string"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "faultIgnoreMs",
                "mode",
                "name",
                "pinEn",
                "pinFault",
                "service"
            ],
            "type": "object"
        },
        "ReflectedLightConfig": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "offset": {
                    "default": 1024,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "pin": {
                    "description": "Pin to analog read.",
                    "type": "integer"
                },
                "pinHigh": {
                    "description": "Pin to pull high before analog read and release afterwards.",
                    "type": "integer"
                },
                "pinLow": {
                    "description": "Pin to pull low before analog read and release afterwards.",
                    "type": "integer"
                },
                "samplingDelay": {
                    "default": 0,
                    "description": "How many milliseconds to wait after setting `pinLow`/`pinHigh` before sampling.",
                    "type": "integer"
                },
                "samplingItv": {
                    "default": 9,
                    "description": "Interval in milliseconds between samplings of the sensor.",
                    "type": "integer"
                },
                "scale": {
                    "default": 0,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "analog:reflectedLight"
                    ],
                    "type": "string"
                },
                "streamingItv": {
                    "default": 100,
                    "description": "Default interval in milliseconds between streaming samples.",
                    "type": "integer"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "pin",
                "service"
            ],
            "type": "object"
        },
        "RelayConfig": {
            "additionalProperties": false,
            "properties": {
                "initalActive": {
                    "description": "Whether to activate the relay upon boot.",
                    "type": "boolean"
                },
                "ledActiveLow": {
                    "description": "Which way to drive the `pinLed`",
                    "type": "boolean"
                },
                "maxCurrent": {
                    "description": "Maximum switching current in mA.",
                    "type": "integer"
                },
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "pin": {
                    "description": "The driving pin.",
                    "type": "integer"
                },
                "pinActiveLow": {
                    "description": "When set, the relay is considered 'active' when `pin` is low.",
                    "type": "boolean"
                },
                "pinFeedback": {
                    "description": "Active-high pin that indicates the actual state of the relay.",
                    "type": "integer"
                },
                "pinLed": {
                    "description": "This pin will be driven when relay is active.",
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "relay"
                    ],
                    "type": "string"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "pin",
                "service"
            ],
            "type": "object"
        },
        "RotaryEncoderConfig": {
            "additionalProperties": false,
            "properties": {
                "clicksPerTurn": {
                    "default": 12,
                    "description": "How many clicks for full 360 turn.",
                    "type": "integer"
                },
                "dense": {
                    "description": "Encoder supports \"half-clicks\".",
                    "type": "boolean"
                },
                "inverted": {
                    "description": "Invert direction.",
                    "type": "boolean"
                },
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "pin0": {
                    "type": "integer"
                },
                "pin1": {
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "rotaryEncoder"
                    ],
                    "type": "string"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "pin0",
                "pin1",
                "service"
            ],
            "type": "object"
        },
        "ServiceConfig": {
            "anyOf": [
                {
                    "$ref": "#/definitions/RotaryEncoderConfig"
                },
                {
                    "$ref": "#/definitions/ButtonConfig"
                },
                {
                    "$ref": "#/definitions/RelayConfig"
                },
                {
                    "$ref": "#/definitions/PowerConfig"
                },
                {
                    "$ref": "#/definitions/LightLevelConfig"
                },
                {
                    "$ref": "#/definitions/ReflectedLightConfig"
                },
                {
                    "$ref": "#/definitions/WaterLevelConfig"
                },
                {
                    "$ref": "#/definitions/SoundLevelConfig"
                },
                {
                    "$ref": "#/definitions/SoilMoistureConfig"
                },
                {
                    "$ref": "#/definitions/PotentiometerConfig"
                }
            ]
        },
        "SoilMoistureConfig": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "offset": {
                    "default": 1024,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "pin": {
                    "description": "Pin to analog read.",
                    "type": "integer"
                },
                "pinHigh": {
                    "description": "Pin to pull high before analog read and release afterwards.",
                    "type": "integer"
                },
                "pinLow": {
                    "description": "Pin to pull low before analog read and release afterwards.",
                    "type": "integer"
                },
                "samplingDelay": {
                    "default": 0,
                    "description": "How many milliseconds to wait after setting `pinLow`/`pinHigh` before sampling.",
                    "type": "integer"
                },
                "samplingItv": {
                    "default": 9,
                    "description": "Interval in milliseconds between samplings of the sensor.",
                    "type": "integer"
                },
                "scale": {
                    "default": 0,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "analog:soilMoisture"
                    ],
                    "type": "string"
                },
                "streamingItv": {
                    "default": 100,
                    "description": "Default interval in milliseconds between streaming samples.",
                    "type": "integer"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "pin",
                "service"
            ],
            "type": "object"
        },
        "SoundLevelConfig": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "offset": {
                    "default": 1024,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "pin": {
                    "description": "Pin to analog read.",
                    "type": "integer"
                },
                "pinHigh": {
                    "description": "Pin to pull high before analog read and release afterwards.",
                    "type": "integer"
                },
                "pinLow": {
                    "description": "Pin to pull low before analog read and release afterwards.",
                    "type": "integer"
                },
                "samplingDelay": {
                    "default": 0,
                    "description": "How many milliseconds to wait after setting `pinLow`/`pinHigh` before sampling.",
                    "type": "integer"
                },
                "samplingItv": {
                    "default": 9,
                    "description": "Interval in milliseconds between samplings of the sensor.",
                    "type": "integer"
                },
                "scale": {
                    "default": 0,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "analog:soundLevel"
                    ],
                    "type": "string"
                },
                "streamingItv": {
                    "default": 100,
                    "description": "Default interval in milliseconds between streaming samples.",
                    "type": "integer"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "pin",
                "service"
            ],
            "type": "object"
        },
        "WaterLevelConfig": {
            "additionalProperties": false,
            "properties": {
                "name": {
                    "description": "Instance/role name to be assigned to service.",
                    "examples": [
                        "buttonA",
                        "activityLed"
                    ],
                    "type": "string"
                },
                "offset": {
                    "default": 1024,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "pin": {
                    "description": "Pin to analog read.",
                    "type": "integer"
                },
                "pinHigh": {
                    "description": "Pin to pull high before analog read and release afterwards.",
                    "type": "integer"
                },
                "pinLow": {
                    "description": "Pin to pull low before analog read and release afterwards.",
                    "type": "integer"
                },
                "samplingDelay": {
                    "default": 0,
                    "description": "How many milliseconds to wait after setting `pinLow`/`pinHigh` before sampling.",
                    "type": "integer"
                },
                "samplingItv": {
                    "default": 9,
                    "description": "Interval in milliseconds between samplings of the sensor.",
                    "type": "integer"
                },
                "scale": {
                    "default": 0,
                    "description": "Reading is `offset + (raw_reading * scale) / 1024`",
                    "type": "integer"
                },
                "service": {
                    "enum": [
                        "analog:waterLevel"
                    ],
                    "type": "string"
                },
                "streamingItv": {
                    "default": 100,
                    "description": "Default interval in milliseconds between streaming samples.",
                    "type": "integer"
                },
                "variant": {
                    "description": "Service variant (see service definition for possible values).",
                    "type": "integer"
                }
            },
            "required": [
                "name",
                "pin",
                "service"
            ],
            "type": "object"
        }
    },
    "properties": {
        "$schema": {
            "type": "string"
        },
        "_": {
            "description": "Services to mount.",
            "items": {
                "$ref": "#/definitions/ServiceConfig"
            },
            "type": "array"
        },
        "devClass": {
            "$ref": "#/definitions/HexInt",
            "description": "Device class code, typically given as a hex number starting with 0x3.",
            "examples": [
                "0x379ea214"
            ]
        },
        "devName": {
            "description": "Name of the device.",
            "examples": [
                "Acme Corp. SuperIoT v1.3"
            ],
            "type": "string"
        },
        "led": {
            "$ref": "#/definitions/LedConfig"
        },
        "pinJacdac": {
            "type": "integer"
        }
    },
    "required": [
        "devClass",
        "devName"
    ],
    "type": "object"
}

